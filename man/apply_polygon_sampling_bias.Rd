% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_polygon_sampling_bias.R
\name{apply_polygon_sampling_bias}
\alias{apply_polygon_sampling_bias}
\title{Apply sampling bias to occurrences via a polygon}
\usage{
apply_polygon_sampling_bias(occurrences_sf, bias_area, bias_strength = 1)
}
\arguments{
\item{occurrences_sf}{An sf object with POINT geometry representing the
occurrences.}

\item{bias_area}{An sf object with POLYGON geometry specifying the area where
sampling will be biased.}

\item{bias_strength}{A positive numeric value that represents the strength of
the bias to be applied within the \code{bias_area}. Values greater than 1 will
increase the sampling probability within the polygon relative to outside
(oversampling), while values between 0 and 1 will decrease it
(undersampling). For instance, a value of 50 will make the probability 50
times higher within the \code{bias_area} compared to outside, whereas a value of
0.5 will make it half as likely.}
}
\value{
An sf object with POINT geometry that includes a \code{bias_weight}
column containing the sampling probabilities based on the bias area and
strength.
}
\description{
This function adds a sampling bias weight column to an \code{sf} object containing
occurrences based on a given polygonal area. The bias is determined by the
specified bias strength, which adjusts the probability of sampling within
the polygonal area.
}
\examples{
# Load packages
library(sf)
library(dplyr)
library(ggplot2)

# Simulate some occurrence data with coordinates and time points
num_points <- 10
occurrences <- data.frame(
  lon = runif(num_points, min = -180, max = 180),
  lat = runif(num_points, min = -90, max = 90),
  time_point = 1
  )

# Convert the occurrence data to an sf object
occurrences_sf <- st_as_sf(occurrences, coords = c("lon", "lat"))

# Create bias_area polygon overlapping at least two of the points
selected_observations <- st_union(occurrences_sf[2:3,])
bias_area <- st_convex_hull(selected_observations) \%>\%
  st_buffer(dist = 50) \%>\%
  st_as_sf()

occurrence_bias_sf <- apply_polygon_sampling_bias(
  occurrences_sf,
  bias_area,
  bias_strength = 2)
occurrence_bias_sf

# Visualise where the bias is
occurrence_bias_sf \%>\%
  mutate(bias_weight = as.factor(round(bias_weight, 3))) \%>\%
  ggplot() +
    geom_sf(data = bias_area) +
    geom_sf(aes(colour = bias_weight)) +
    theme_minimal()
}
\seealso{
Other detection: 
\code{\link{apply_manual_sampling_bias}()}
}
\concept{detection}
