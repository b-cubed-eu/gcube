% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_simulation_functions.R
\name{map_simulation_functions}
\alias{map_simulation_functions}
\title{Map a cube simulation function over multiple rows of a dataframe}
\usage{
map_simulation_functions(f, df, nested = TRUE)
}
\arguments{
\item{f}{One of five cube simulation functions: \code{simulate_occurrences()},
\code{sample_observations()}, \code{filter_observations()},
\code{add_coordinate_uncertainty()}, or \code{grid_designation()}.}

\item{df}{A dataframe containing multiple rows, each representing a
different species. The columns are function arguments with values used for
mapping \code{f} for each species. Columns not used by this
function will be retained in the output.}

\item{nested}{Logical. If \code{TRUE} (default), retains list-column containing
dataframes calculated by \code{f}. Otherwise, expands this list-column into rows
and columns.}
}
\value{
In case of \code{nested = TRUE}, a dataframe identical to \code{df}, with an
extra list-column called \code{mapped_col} containing an sf object for each row
computed by the function specified in \code{f}. In case of \code{nested = FALSE}, this
list-column is expanded into additional rows and columns.
}
\description{
This function executes a cube simulation function (\code{simulate_occurrences()},
\code{sample_observations()}, \code{filter_observations()},
\code{add_coordinate_uncertainty()}, or \code{grid_designation()}) over multiple rows
of a dataframe with potentially different function arguments over multiple
columns.
}
\examples{
# Load packages
library(sf)
library(dplyr)

# Create polygon
plgn <- st_polygon(list(cbind(c(5, 10, 8, 2, 3, 5), c(2, 1, 7, 9, 5, 2))))

## Example with simple column names
# Specify dataframe for 3 species with custom function arguments
species_dataset_df <- tibble(
  taxonID = c("species1", "species2", "species3"),
  plgn = rep(list(plgn), 3),
  initial_average_abundance = c(50, 100, 500),
  n_time_points = rep(6, 3),
  temporal_function = c(simulate_random_walk, simulate_random_walk, NA),
  sd_step = c(1, 1, NA),
  spatial_autocorr = "random",
  seed = 123)

# Simulate occurrences
sim_occ_raw <- map_simulation_functions(
  f = simulate_occurrences,
  df = species_dataset_df)
sim_occ_raw

# Unnest output and create sf object
sim_occ_raw_unnested <- map_simulation_functions(
  f = simulate_occurrences,
  df = species_dataset_df,
  nested = FALSE)

sim_occ_raw_unnested \%>\%
   st_sf()
}
\concept{multispecies_low}
