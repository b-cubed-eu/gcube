% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_spatial_pattern.R
\name{create_spatial_pattern}
\alias{create_spatial_pattern}
\title{Create spatial pattern within a polygon}
\usage{
create_spatial_pattern(
  polygon,
  resolution,
  spatial_pattern = c("random", "clustered"),
  seed = NA,
  n_sim = 1
)
}
\arguments{
\item{polygon}{An sf object with POLYGON geometry.}

\item{resolution}{A numeric value defining the resolution of the raster
cells.}

\item{spatial_pattern}{Specifies the desired spatial pattern. It can
be a character string (\code{"random"} or \code{"clustered"}) or a numeric value â‰¥ 1
(1 means random distribution, larger values indicate more clustering).
The default is \code{"random"}. \code{"clustered"} corresponds to a value of 10.
See Details.}

\item{seed}{A positive numeric value setting the seed for random number
generation to ensure reproducibility. If \code{NA} (default), no seed is used.}

\item{n_sim}{Number of simulations. Each simulation is a different layer in
the raster. Default is 1.}
}
\value{
An object of class SpatRaster with a spatial pattern for the area of
the given polygon.
}
\description{
This function creates a raster with a spatial pattern for the area of a
polygon.
}
\details{
The \code{spatial_pattern} argument changes the range parameter of the
spherical variogram model. \code{spatial_pattern = 1} means the range has the same
size as the grid cell, which is defined in the \code{resolution} argument. The
function \code{\link[gstat:vgm]{gstat::vgm()}} is used to implement the spherical variogram model.
}
\examples{
# Load packages
library(sf)
library(ggplot2)
library(tidyterra)

# Create polygon
plgn <- st_polygon(list(cbind(c(5, 10, 8, 2, 3, 5), c(2, 1, 7, 9, 5, 2))))

# 1. Random spatial pattern
rs_pattern_random <- create_spatial_pattern(
  polygon = plgn,
  resolution = 0.1,
  spatial_pattern = "random",
  seed = 123)

ggplot() +
  geom_spatraster(data = rs_pattern_random) +
  scale_fill_continuous(type = "viridis") +
  theme_minimal()

# 2. Clustered spatial pattern
rs_pattern_clustered <- create_spatial_pattern(
  polygon = plgn,
  resolution = 0.1,
  spatial_pattern = "clustered",
  seed = 123)

ggplot() +
  geom_spatraster(data = rs_pattern_clustered) +
  scale_fill_continuous(type = "viridis") +
  theme_minimal()

# 3. User defined spatial pattern
# Large scale clustering
rs_pattern_large <- create_spatial_pattern(
  polygon = plgn,
  resolution = 0.1,
  spatial_pattern = 100,
  seed = 123)

ggplot() +
  geom_spatraster(data = rs_pattern_large) +
  scale_fill_continuous(type = "viridis") +
  theme_minimal()
}
\seealso{
\code{\link[gstat:vgm]{gstat::vgm()}} and its \code{range} argument

Other occurrence: 
\code{\link{sample_occurrences_from_raster}()},
\code{\link{simulate_random_walk}()},
\code{\link{simulate_timeseries}()}
}
\concept{occurrence}
